const express = require("express");
const axios = require("axios");
const app = express();
const PORT = process.env.PORT || 3000;

const WEBHOOK = "https://itnasr.bitrix24.kz/rest/1/bucjza1li2wbp6lr/";
const WHATSAPP_FIELD = "UF_CRM_SMART_INVOICE_1729361040";

app.get("/clean-invoice", async (req, res) => {
  const invoiceId = req.query.invoice_id;
  if (!invoiceId) return res.status(400).send("‚ùå –ù–µ –ø–µ—Ä–µ–¥–∞–Ω invoice_id");

  try {
    const invoiceRes = await axios.post(`${WEBHOOK}crm.item.get`, {
      entityTypeId: 31,
      id: invoiceId
    });
    const invoice = invoiceRes.data?.result?.item;

    console.log("üì¶ –û—Ç–≤–µ—Ç Bitrix24 crm.item.get:", JSON.stringify(invoiceRes.data, null, 2));
    if (!invoice) return res.status(404).send("‚ùå –°–º–∞—Ä—Ç-—Å—á—ë—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");

    let rawPhone = null;

    // 1. –ò—â–µ–º –Ω–æ–º–µ—Ä –≤ TITLE
    const titleMatch = invoice.TITLE?.match(/(?:\+?\d[\d\s\-().]{6,})/);
    if (titleMatch) {
      rawPhone = titleMatch[0];
      console.log("üìå –¢–µ–ª–µ—Ñ–æ–Ω –∏–∑ TITLE:", rawPhone);
    }

    // 2. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    if (!rawPhone && invoice.contactIds && invoice.contactIds.length > 0) {
      const contactId = invoice.contactIds[0];
      const contactRes = await axios.post(`${WEBHOOK}crm.contact.get`, {
        id: contactId
      });
      const contact = contactRes.data?.result;
      const phoneObj = contact?.PHONE?.find(p => typeof p.VALUE === "string");
      if (phoneObj) {
        rawPhone = phoneObj.VALUE;
        console.log("üìå –¢–µ–ª–µ—Ñ–æ–Ω –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞:", rawPhone);
      }
    }

    if (!rawPhone) {
      return res.send("‚ùó –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ TITLE, –Ω–∏ –≤ –ö–æ–Ω—Ç–∞–∫—Ç–µ");
    }

    const cleanedPhone = rawPhone.replace(/\D/g, "");
    const whatsappLink = `https://wa.me/${cleanedPhone}`;

    // –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
    await axios.post(`${WEBHOOK}crm.item.update`, {
      entityTypeId: 31,
      id: invoiceId,
      fields: {
        [WHATSAPP_FIELD]: ""
      }
    });

    // –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–π —Å—Å—ã–ª–∫–∏
    await axios.post(`${WEBHOOK}crm.item.update`, {
      entityTypeId: 31,
      id: invoiceId,
      fields: {
        [WHATSAPP_FIELD]: whatsappLink
      }
    });

    res.send(`‚úÖ –°–º–∞—Ä—Ç-—Å—á—ë—Ç –æ–±–Ω–æ–≤–ª—ë–Ω: <a href="${whatsappLink}" target="_blank">${whatsappLink}</a>`);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞:", err?.response?.data || err.message);
    res.status(500).send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–º–∞—Ä—Ç-—Å—á—ë—Ç–∞");
  }
});

app.get("/ping", (req, res) => {
  res.send("pong");
});

app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
